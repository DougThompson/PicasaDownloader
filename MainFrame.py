#!/usr/bin/env python
'''
Copyright (c) 2011-2012 Doug Thompson

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"),to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'''

''''Subclass of MainFrameBase, which is generated by wxFormBuilder.'''
import os
import wx
import gui
import PreferenceDialog
import PicasaDownloader
from configobj import ConfigObj

class MainFrame( gui.MainFrameBase ):
	# Setup a few variables to handle the URL details
	userName = ""
	gallery = ""
	authkey = ""
	platform = ""
	cursorWaitStyle = wx.CURSOR_WAIT
	
	def __init__( self, parent ):
		gui.MainFrameBase.__init__( self, parent )
		
		# Load config values and populate the form
		config = ConfigObj('config.ini')['Values']
		self.m_tbxRootUrl.Value = config['defaultAlbum']
		self.m_tbxDestFolder.Value = config['defaultFolder']
	
		# Get platform and make some modifications for Mac
		# SetCursor Doesn't seem to work for Mac 10.6 -- still
		# investigating proper way to change cursor
		if wx.Platform == '__WXMAC__':
			self.cursorWaitStyle = wx.CURSOR_WATCH		
			self.SetSize(wx.Size(1200, 800))
			
	def m_btnGetGalleriesClick(self, event):
		'''
		Get the gallery(ies) for the provided Picasa URL
		'''
		# Create a PicasaDownloader instance and get the list of galleries.
		# If it is a private gallery, then only the one gallery will be listed.
		pic = PicasaDownloader.PicasaDownloader()
		self.userName, self.gallery, self.authkey = pic.splitPicasaWebURL(self.m_tbxRootUrl.Value)
		
		# Parse the resulting tuple and determine if a gallery has been passed
		# If a gallery has not been passed, then collect all galleries for the
		# Google username
		if (self.gallery is not None and self.gallery <> ""):
			self.m_lstGalleries.Clear()
			self.m_lstGalleries.Append(self.gallery)
		else:
			self.m_lstGalleries.Clear()
			self.m_lstGalleries.SetItems(pic.getAllAlbums(self.userName))
		
		# If any galleries are returned, select the first one for convenience.
		if len(self.m_lstGalleries.Items) > 0:
			self.m_lstGalleries.Select(0)
	
		# If only one gallery is returned, then get all images associated with
		# that gallery for even more convenience.
		
		# Set Wait cursor while images are loaded
		myCursor= wx.StockCursor(self.cursorWaitStyle)
		self.SetCursor(myCursor)
		
		if len(self.m_lstGalleries.Items) == 1:
			selGallery = self.m_lstGalleries.GetStringSelection()
			images = pic.listAllImages(self.userName, self.authkey, selGallery)
			self.m_lstImages.SetItems(images)
			
		# Set Default cursor while images are loaded
		myCursor= wx.StockCursor(wx.CURSOR_DEFAULT)
		self.SetCursor(myCursor)
	
	def m_btnDownloadClick(self, event):
		'''
		Download the images for a Picasa Web Gallery
		'''
		# To download all selected images, create a PicasaDownloader instance, grab
		# the download folder location and create it if it does not exist. Then get
		# the list of selected images and pass them to PicasaDownloader to handle
		# the download.
		
		# Set Wait cursor while images are downloaded
		myCursor= wx.StockCursor(self.cursorWaitStyle)
		self.SetCursor(myCursor)

		pic = PicasaDownloader.PicasaDownloader()
		selGallery = self.m_lstGalleries.GetStringSelection()

		destFolder = self.m_tbxDestFolder.Value
		
		if (self.m_chkAddToPath.IsChecked()):
			destFolder = os.path.join(destFolder, selGallery)

		# Use makedirs to create all necessary directories including sub-directories
		if not os.path.exists(destFolder):
			os.makedirs(destFolder)
		
		# The following line downloads all images and ignores any selections
		#pic.getAllImages(self.userName, self.authkey, selGallery, destFolder, self.m_statusBar)
		
		# Simply get a list of the selected images to pass along
		images = []
		for i in self.m_lstImages.GetSelections():
			images.append(self.m_lstImages.GetString(i))
		
		pic.getAllImages2(destFolder, images, self.m_statusBar)

		# Set Default cursor
		myCursor= wx.StockCursor(wx.CURSOR_DEFAULT)
		self.SetCursor(myCursor)
	
	def m_btnBrowseClick(self, event):
		'''
		Browse for the download directory
		'''
		# Open a standard wxPython Directory Dialog
		dialog = wx.DirDialog(self, "Choose a directory:", style=wx.DD_DEFAULT_STYLE | wx.DD_NEW_DIR_BUTTON)
		
		# Set default directory to the value in the Textbox, if it exists
		if os.path.exists(self.m_tbxDestFolder.Value):
			dialog.SetPath(self.m_tbxDestFolder.Value)
			
		if dialog.ShowModal() == wx.ID_OK:
			self.m_tbxDestFolder.Value = dialog.GetPath()
		dialog.Destroy()

	def m_mniExitClick(self, event):
		'''
		Quit the application
		'''
		self.Close()
	
	def m_mniAboutClick(self, event):
		'''
		Simple about dialog
		'''
		wx.MessageBox("Picasa Web Gallery Downloader by Doug Thompson.","Picasa Web Gallery Downloader")
	
	def m_mniPreferencesClick(self, event):
		'''
		Open the Preference dialog
		'''
		dlg = PreferenceDialog.PreferencesDialog(self)
		dlg.ShowModal()
		dlg.Destroy()

	def m_lstGalleriesOnListBox( self, event ):
		'''
		Change of selected index, so load the images for the gallery
		'''
		# Set Wait cursor while images are loaded
		myCursor= wx.StockCursor(self.cursorWaitStyle)
		self.SetCursor(myCursor)

		pic = PicasaDownloader.PicasaDownloader()
		self.userName, self.gallery, self.authkey = pic.splitPicasaWebURL(self.m_tbxRootUrl.Value)
		
		# Get the text name of the gallery and then get a list of all its images
		selGallery = self.m_lstGalleries.GetStringSelection()
		images = pic.listAllImages(self.userName, self.authkey, selGallery)
		self.m_lstImages.SetItems(images)

		# Set Default cursor
		myCursor= wx.StockCursor(wx.CURSOR_DEFAULT)
		self.SetCursor(myCursor)
				
	def m_lstImagesOnListBox( self, event ):
		'''
		Load the image preview
		'''
		# Currently, do nothing
		event.Skip()
		
		# Uncomment the lines below to allow for images to be loaded on index change.
		# Currently commented out due to an error with wxPython -- a race condition,
		# I believe with sending events to the embedded HTML control
		
		#images = self.m_lstImages.GetSelections()
		#self.m_htmlThumb.LoadPage(self.m_lstImages.GetString(images[len(images) - 1]))

	def m_btnPreviewClick( self, event ):
		'''
		Get the selected image and load the thumbnail
		'''
		images = self.m_lstImages.GetSelections()
		self.m_htmlThumb.LoadPage(self.m_lstImages.GetString(images[len(images) - 1]))
		